package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/EleyOliveira/go-clean-arch/internal/infra/graphql/graph/model"
)

// Orders is the resolver for the Orders field.
func (r *queryResolver) Orders(ctx context.Context) ([]*model.Order, error) {
	orders, err := r.ListOrderUseCase.ListOrders()
	if err != nil {
		return nil, err
	}

	var ordersOutput []*model.Order
	for _, order := range orders {
		orderOutput := &model.Order{
			ID:         order.ID,
			Price:      order.Price,
			Tax:        order.Tax,
			FinalPrice: order.Finalprice,
		}
		ordersOutput = append(ordersOutput, orderOutput)
	}

	return ordersOutput, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
